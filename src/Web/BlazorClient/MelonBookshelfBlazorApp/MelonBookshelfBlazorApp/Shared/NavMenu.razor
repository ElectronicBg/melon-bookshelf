@using MelonBookshelfBlazorApp.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager _navigationManager
@inject AuthenticationService _auth
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">MelonBookshelfBlazorApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass">
    <nav class="flex-column">
        @if (!AuthenticationManager.IsAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Login
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/register">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Register
                </NavLink>
            </div>
        }
        else if (AuthenticationManager.IsAdmin)
        {
            <div class="nav-item px-3">
                <button type="button" class="btn btn-link nav-link" @onclick="Logout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Log out
                </button>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/resource-search">
                    <span class="oi oi-magnifying-glass" aria-hidden="true"></span> Resource Search
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="borrowed-resources">
                    <span class="oi oi-book" aria-hidden="true"></span> Borrowed Resources
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/requests">
                    <span class="oi oi-star" aria-hidden="true"></span> Requests
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <button type="button" class="btn btn-link nav-link" @onclick="Logout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Log out
                </button>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : "";

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        AuthenticationManager.OnChange += StateHasChanged;
        base.OnInitialized();

        AuthenticationManager.AuthenticationStateProvider = AuthenticationStateProvider;

        var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        AuthenticationManager.IsUserAuthenticated(state);
        AuthenticationManager.IsUserAdmin(state.User.Claims);

        await AuthenticationManager.UpdateAuthenticationState();
    }

    private async Task Logout()
    {
        _auth.RemoveToken();

        await AuthenticationManager.UpdateAuthenticationState();

        await InvokeAsync(StateHasChanged);

        _navigationManager.NavigateTo("/login");
    }
}

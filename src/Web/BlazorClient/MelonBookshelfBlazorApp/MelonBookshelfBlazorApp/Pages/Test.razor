@page "/test"
@using MelonBookshelfBlazorApp.ApiEndpoints;
@using MelonBookshelfBlazorApp.Models;
@using MelonBookshelfBlazorApp.Models.Results;
@using System.Text;
@using MelonBookshelfBlazorApp.Services;
@using Newtonsoft.Json;
@inject AuthenticationFetcher _authFetcher

<h3>Login</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <InputText id="username" @bind-Value="loginModel.Username" placeholder="Username" />
    <br/>
    <InputText id="password" @bind-Value="loginModel.Password" placeholder="Password" type="password" />
    <br/>
    <button type="submit">Login</button>
</EditForm>

@if (loginResult != null)
{
    <div>
        <h3>Your Token:</h3>
        <p>@loginResult.Token</p>
    </div>
}

@code {
	private LoginModel loginModel = new LoginModel();
    private LoginResult? loginResult = null;

    private async Task HandleLogin()
    {
        var jsonContent = new StringContent(JsonConvert.SerializeObject(loginModel), Encoding.UTF8, "application/json");

        var response = await _authFetcher.Login(jsonContent);
        loginResult = JsonConvert.DeserializeObject<LoginResult>(response);
    }
}
